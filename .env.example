#main
DEKART_PORT=8080
# Dekart database for storing metadata
# alternatively just use DEKART_POSTGRES_URL=postgres://dekart:dekart@localhost:5432/dekart
DEKART_POSTGRES_DB=dekart
DEKART_POSTGRES_USER=dekart
DEKART_POSTGRES_PASSWORD=
DEKART_POSTGRES_PORT=5432
DEKART_POSTGRES_HOST=localhost
DEKART_MAPBOX_TOKEN=
DEKART_STORAGE=GCS
DEKART_DATASOURCE=BQ
DEKART_CLOUD_STORAGE_BUCKET=
DEKART_CORS_ORIGIN=

# file upload
DEKART_ALLOW_FILE_UPLOAD=

#google cloud
GOOGLE_APPLICATION_CREDENTIALS=

#aws
AWS_REGION=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

#google IAP
DEKART_IAP_JWT_AUD=
DEKART_REQUIRE_IAP=0

# google oauth2 flow
DEKART_REQUIRE_GOOGLE_OAUTH2=0
DEKART_GOOGLE_OAUTH_CLIENT_ID=
DEKART_GOOGLE_OAUTH_SECRET=

# Amazon OIDC
DEKART_REQUIRE_AMAZON_OIDC=0

#bigquery datasource
DEKART_BIGQUERY_PROJECT_ID=
DEKART_UX_DATA_DOCUMENTATION=
DEKART_BIGQUERY_MAX_BYTES_BILLED=1099511627776

# aws athena datasource
DEKART_ATHENA_S3_OUTPUT_LOCATION=my-bucket
DEKART_ATHENA_CATALOG=AwsDataCatalog
DEKART_ATHENA_WORKGROUP=

# snowflake datasource
DEKART_SNOWFLAKE_ACCOUNT_ID=
DEKART_SNOWFLAKE_USER=
DEKART_SNOWFLAKE_PASSWORD=

# postgres datasource
# postgres like data source connection string (e.g. postgres://user:password@host:port/db)
DEKART_POSTGRES_DATASOURCE_CONNECTION=

#UX
DEKART_UX_HOMEPAGE=
DEKART_UX_ACCESS_ERROR_INFO_HTML=
DEKART_HTML_CUSTOM_CODE=
DEKART_DISABLE_USAGE_STATS=
DEKART_UX_ACCESS_ERROR_INFO_HTML=
DEKART_UX_NOT_FOUND_ERROR_INFO_HTML=
DEKART_UX_SAMPLE_QUERY_SQL=

#dev
DEKART_STREAM_TIMEOUT=
DEKART_LOG_DEBUG=1
DEKART_LOG_PRETTY=1
DEKART_STATIC_FILES=
REACT_APP_CUSTOM_CODE=
DEKART_DEV_CLAIMS_EMAIL=
DEKART_DEV_REFRESH_TOKEN=
DEKART_DOCKER_DEV_TAG=dekart-dev
DEKART_DOCKER_E2E_TAG=dekart-e2e
