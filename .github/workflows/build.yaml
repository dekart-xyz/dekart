name: Dekart Build

permissions:
  contents: read
  packages: write

on:
  workflow_call:
    inputs:
      build_app: { type: boolean, default: false }
      build_e2e: { type: boolean, default: false }
      # REQUIRED – repo flavour
      target:
        type: string # cloud | premium | oss
        required: true
        description: "Where to push & how to build"
    outputs:
      app_image:
        value: ${{ jobs.build.outputs.app_image }}
      e2e_image:
        value: ${{ jobs.build.outputs.e2e_image }}
env:
  IMAGE_CACHE_KEY: e2etest-${{ github.run_id }}-${{ github.run_attempt }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app_image: ${{ steps.collect.outputs.app_primary }}
      e2e_image: ${{ steps.collect.outputs.e2e_primary }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - id: registry
        run: |
          case "${{ inputs.target }}" in
            cloud)
              echo "REG=europe-west3-docker.pkg.dev/dekart-cloud/dekart"  >>"$GITHUB_OUTPUT"
              echo "LOGIN=gar"  >>"$GITHUB_ENV"
              echo "UX_DISABLE_VERSION_CHECK=1" >>"$GITHUB_ENV"
              ;;
            premium)
              echo "REG=ghcr.io/${{ github.repository }}" >>"$GITHUB_OUTPUT"
              echo "LOGIN=ghcr" >>"$GITHUB_ENV"
              echo "UX_DISABLE_VERSION_CHECK=1" >>"$GITHUB_ENV"
              ;;
            oss)
              echo "REG=dekartxyz" >>"$GITHUB_OUTPUT"
              echo "LOGIN=dh"   >>"$GITHUB_ENV"
              echo "UX_DISABLE_VERSION_CHECK=" >>"$GITHUB_ENV"
              ;;
            *)  echo "::error::Unknown target '${{ inputs.target }}'"; exit 1 ;;
          esac

      - uses: google-github-actions/setup-gcloud@v0 # GAR
        if: env.LOGIN == 'gar'
        with:
          project_id: dekart-cloud
          service_account_key: ${{ secrets.PRIVATE_GITHUB_ACTIONS_DEKART_CLOUD }}
          export_default_credentials: true
      - run: gcloud auth configure-docker europe-west3-docker.pkg.dev
        if: env.LOGIN == 'gar'

      - uses: docker/login-action@v3 # GHCR
        if: env.LOGIN == 'ghcr'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/login-action@v3 # Docker Hub
        if: env.LOGIN == 'dh'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Configure .npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_GH_TOKEN }}" > .npmrc
          echo "@dekart-xyz:registry=https://npm.pkg.github.com" >> .npmrc

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.registry.outputs.REG }}/dekart
          tags: |
            type=sha,format=short,prefix=sha-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: latest=false # never add “latest” automatically

      - id: collect
        run: |
          APP_TAGS='${{ steps.meta.outputs.tags }}'
          E2E_TAG="${{ steps.registry.outputs.REG }}/dekart:${IMAGE_CACHE_KEY}"

          echo "e2e_tags=$E2E_TAG"       >>"$GITHUB_OUTPUT"
          echo "app_primary=$(echo "$APP_TAGS" | head -n1)" >>"$GITHUB_OUTPUT"
          echo "e2e_primary=$E2E_TAG"    >>"$GITHUB_OUTPUT"

      - name: Build & push APP image
        if: inputs.build_app
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            DEKART_UX_DISABLE_VERSION_CHECK=${{ env.UX_DISABLE_VERSION_CHECK }}
          cache-from: type=registry,ref=${{ steps.registry.outputs.REG }}/dekart:buildcache
          cache-to: type=registry,ref=${{ steps.registry.outputs.REG }}/dekart:buildcache,mode=max

      - name: Build & push E2E image
        if: inputs.build_e2e
        uses: docker/build-push-action@v6
        with:
          context: .
          target: e2etest
          push: true
          tags: ${{ steps.collect.outputs.e2e_tags }}
          build-args: |
            DEKART_UX_DISABLE_VERSION_CHECK=${{ env.UX_DISABLE_VERSION_CHECK }}
          cache-from: type=registry,ref=${{ steps.registry.outputs.REG }}/dekart:buildcache
          cache-to: type=registry,ref=${{ steps.registry.outputs.REG }}/dekart:buildcache,mode=max
